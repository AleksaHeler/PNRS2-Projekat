# 
# 
# 
# 
# //  Questa Sim-64
# //  Version 10.4d win64 Dec 30 2015
# //
# //  Copyright 1991-2015 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //  THIS DOCUMENT CONTAINS TRADE SECRETS AND COMMERCIAL OR FINANCIAL
# //  INFORMATION THAT ARE PRIVILEGED, CONFIDENTIAL, AND EXEMPT FROM
# //  DISCLOSURE UNDER THE FREEDOM OF INFORMATION ACT, 5 U.S.C. SECTION 552.
# //  FURTHERMORE, THIS INFORMATION IS PROHIBITED FROM DISCLOSURE UNDER
# //  THE TRADE SECRETS ACT, 18 U.S.C. SECTION 1905.
# //
# do run.do
# QuestaSim-64 vcom 10.4d Compiler 2015.12 Dec 30 2015
# Start time: 14:17:57 on Mar 30,2022
# vcom -reportprogress 300 -f dut.f 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Compiling entity single_cycle
# -- Compiling architecture add_and_xor of single_cycle
# -- Compiling entity three_cycle
# -- Compiling architecture mult of three_cycle
# -- Compiling entity tinyalu
# -- Compiling architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# End time: 14:17:57 on Mar 30,2022, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# QuestaSim-64 vlog 10.4d Compiler 2015.12 Dec 30 2015
# Start time: 14:17:58 on Mar 30,2022
# vlog -reportprogress 300 -f tb.f 
# -- Compiling package tinyalu_pkg
# -- Importing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)
# ** Note: (vlog-2286) Using implicit +incdir+C:/questasim64_10.4d/uvm-1.1d/../verilog_src/uvm-1.1d/src from import uvm_pkg
# 
# -- Compiling interface tinyalu_bfm
# -- Importing package tinyalu_pkg
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 14:17:58 on Mar 30,2022, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# QuestaSim-64 vopt 10.4d Compiler 2015.12 Dec 30 2015
# Start time: 14:17:58 on Mar 30,2022
# vopt -reportprogress 300 top -o top_optimized "+acc" "+cover=sbfec+tinyalu(rtl)." 
# 
# Top level modules:
# 	top
# 
# Analyzing design...
# -- Loading module top
# -- Importing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)
# -- Importing package tinyalu_pkg
# -- Loading package mtiUvm.questa_uvm_pkg
# -- Loading interface tinyalu_bfm
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package std_logic_arith
# -- Loading entity tinyalu
# -- Loading architecture rtl of tinyalu
# -- Loading entity single_cycle
# -- Loading entity three_cycle
# -- Loading architecture add_and_xor of single_cycle
# -- Loading architecture mult of three_cycle
# Optimizing 9 design-units (inlining 0/1 module instances, 0/0 UDP instances):
# -- Optimizing architecture add_and_xor of single_cycle
# -- Optimizing architecture mult of three_cycle
# -- Optimizing architecture rtl of tinyalu
# -- Optimizing interface tinyalu_bfm(fast__1)
# -- Optimizing module top(fast)
# -- Optimizing interface tinyalu_bfm(fast)
# -- Optimizing package tinyalu_pkg(fast)
# -- Optimizing package mtiUvm.uvm_pkg (uvm-1.1d Built-in)(fast)
# -- Optimizing package mtiUvm.questa_uvm_pkg(fast)
# Optimized design name is top_optimized
# End time: 14:18:00 on Mar 30,2022, Elapsed time: 0:00:02
# Errors: 0, Warnings: 0
# vsim top_optimized -coverage "+UVM_TESTNAME=random_test" 
# Start time: 14:18:00 on Mar 30,2022
# Loading sv_std.std
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast__1)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading C:/questasim64_10.4d/uvm-1.1d\win64\uvm_dpi.dll
# ** Warning: (vsim-PLI-3003) tb_classes/command_monitor.svh(47): [TOFD] - System task or function '$sprintf' is not defined.
#    Time: 0 ns  Iteration: 0  Region: /tinyalu_pkg::command_monitor::op2enum File: tinyalu_pkg.sv
# 1
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(215) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(217) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test random_test...
# COMMAND MONITOR: A:0x09 B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x8f7
# COMMAND MONITOR: A:0x65 B:0x01 op: no_op
# COMMAND MONITOR: A:0x3d B:0x8c op: no_op
# COMMAND MONITOR: A:0xc5 B:0xe5 op: add_op
# RESULT MONITOR: resultA: 0x1aa
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x5c B:0x2d op: no_op
# COMMAND MONITOR: A:0xff B:0x80 op: no_op
# COMMAND MONITOR: A:0x9d B:0x13 op: no_op
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0xae B:0xcf op: no_op
# COMMAND MONITOR: A:0xca B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xca
# COMMAND MONITOR: A:0x41 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xeb B:0xc6 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x4f B:0xff op: add_op
# RESULT MONITOR: resultA: 0x14e
# COMMAND MONITOR: A:0x15 B:0xd9 op: and_op
# RESULT MONITOR: resultA: 0x11
# COMMAND MONITOR: A:0x00 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xd0 B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1cf
# COMMAND MONITOR: A:0x0c B:0xc8 op: add_op
# RESULT MONITOR: resultA: 0xd4
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1fe
# COMMAND MONITOR: A:0x00 B:0xff op: no_op
# COMMAND MONITOR: A:0xff B:0x58 op: add_op
# RESULT MONITOR: resultA: 0x157
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xda B:0xb5 op: add_op
# RESULT MONITOR: resultA: 0x18f
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xdc op: and_op
# RESULT MONITOR: resultA: 0xdc
# COMMAND MONITOR: A:0xc3 B:0x4e op: and_op
# RESULT MONITOR: resultA: 0x42
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0xdb op: xor_op
# RESULT MONITOR: resultA: 0xdb
# COMMAND MONITOR: A:0x6d B:0xca op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xc7 B:0x08 op: no_op
# COMMAND MONITOR: A:0x29 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x5e B:0xd5 op: xor_op
# RESULT MONITOR: resultA: 0x8b
# COMMAND MONITOR: A:0x37 B:0xc0 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x50 B:0x35 op: add_op
# RESULT MONITOR: resultA: 0x85
# COMMAND MONITOR: A:0xc5 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0xc5
# COMMAND MONITOR: A:0xff B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xa8 B:0xa1 op: and_op
# RESULT MONITOR: resultA: 0xa0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x38 B:0xc8 op: no_op
# COMMAND MONITOR: A:0xff B:0xff op: and_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xb4 B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1b3
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xa9 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xfb B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1fa
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x9b op: xor_op
# RESULT MONITOR: resultA: 0x9b
# COMMAND MONITOR: A:0x00 B:0x4b op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x0d B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x86 B:0x3b op: no_op
# COMMAND MONITOR: A:0xff B:0x5b op: no_op
# COMMAND MONITOR: A:0x00 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xb8 B:0xe5 op: no_op
# COMMAND MONITOR: A:0xff B:0xc8 op: add_op
# RESULT MONITOR: resultA: 0x1c7
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x14 B:0x96 op: no_op
# COMMAND MONITOR: A:0xed B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1ec
# COMMAND MONITOR: A:0x27 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x51 B:0x2a op: xor_op
# RESULT MONITOR: resultA: 0x7b
# COMMAND MONITOR: A:0x83 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x68 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x68
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xc5 op: no_op
# COMMAND MONITOR: A:0x00 B:0xb0 op: no_op
# COMMAND MONITOR: A:0x62 B:0xe1 op: mul_op
# RESULT MONITOR: resultA: 0x5622
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x8d B:0x07 op: no_op
# COMMAND MONITOR: A:0x00 B:0x3b op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x0d op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x9e B:0x7b op: xor_op
# RESULT MONITOR: resultA: 0xe5
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x44 B:0xe0 op: no_op
# COMMAND MONITOR: A:0xf8 B:0x52 op: no_op
# COMMAND MONITOR: A:0x8c B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x8b B:0x25 op: no_op
# COMMAND MONITOR: A:0x49 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x39 op: xor_op
# RESULT MONITOR: resultA: 0x39
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x49 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0xc8 op: xor_op
# RESULT MONITOR: resultA: 0x37
# COMMAND MONITOR: A:0x84 B:0xff op: no_op
# COMMAND MONITOR: A:0x52 B:0xd0 op: add_op
# RESULT MONITOR: resultA: 0x122
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xc5 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xe1 B:0xff op: mul_op
# RESULT MONITOR: resultA: 0xe01f
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x0f B:0x7d op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xb9 op: xor_op
# RESULT MONITOR: resultA: 0x46
# COMMAND MONITOR: A:0xff B:0x51 op: xor_op
# RESULT MONITOR: resultA: 0xae
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x7d B:0xe5 op: mul_op
# RESULT MONITOR: resultA: 0x6fd1
# COMMAND MONITOR: A:0x41 B:0xff op: no_op
# COMMAND MONITOR: A:0x70 B:0xa2 op: xor_op
# RESULT MONITOR: resultA: 0xd2
# COMMAND MONITOR: A:0xdc B:0x00 op: no_op
# COMMAND MONITOR: A:0x78 B:0x5c op: xor_op
# RESULT MONITOR: resultA: 0x24
# COMMAND MONITOR: A:0xc8 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x37
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x0c op: xor_op
# RESULT MONITOR: resultA: 0xc
# COMMAND MONITOR: A:0x15 B:0x4e op: add_op
# RESULT MONITOR: resultA: 0x63
# COMMAND MONITOR: A:0x00 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x00 op: no_op
# COMMAND MONITOR: A:0x4c B:0xff op: no_op
# COMMAND MONITOR: A:0x0d B:0x00 op: no_op
# COMMAND MONITOR: A:0xbc B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x4d op: no_op
# COMMAND MONITOR: A:0x5d B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xb7 B:0x63 op: xor_op
# RESULT MONITOR: resultA: 0xd4
# COMMAND MONITOR: A:0x68 B:0x90 op: add_op
# RESULT MONITOR: resultA: 0xf8
# COMMAND MONITOR: A:0x00 B:0xab op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x00 op: no_op
# COMMAND MONITOR: A:0x8b B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0xa5 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x9a op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xaa B:0xc3 op: no_op
# COMMAND MONITOR: A:0x00 B:0xc3 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x89 op: xor_op
# RESULT MONITOR: resultA: 0x89
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x82 op: xor_op
# RESULT MONITOR: resultA: 0x82
# COMMAND MONITOR: A:0xff B:0x32 op: mul_op
# RESULT MONITOR: resultA: 0x31ce
# COMMAND MONITOR: A:0x00 B:0xaa op: add_op
# RESULT MONITOR: resultA: 0xaa
# COMMAND MONITOR: A:0x8c B:0xfb op: no_op
# COMMAND MONITOR: A:0x00 B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x89 op: add_op
# RESULT MONITOR: resultA: 0x188
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x82 B:0x71 op: xor_op
# RESULT MONITOR: resultA: 0xf3
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x37 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x37
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x12 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xfe B:0xf3 op: no_op
# COMMAND MONITOR: A:0xff B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xff op: mul_op
# RESULT MONITOR: resultA: 0xfe01
# COMMAND MONITOR: A:0x00 B:0xe1 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xc9 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xdc op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x53 op: xor_op
# RESULT MONITOR: resultA: 0x53
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0x70 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x70
# COMMAND MONITOR: A:0x0c B:0x15 op: add_op
# RESULT MONITOR: resultA: 0x21
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xc9 op: xor_op
# RESULT MONITOR: resultA: 0xc9
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x1a B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0xea op: xor_op
# RESULT MONITOR: resultA: 0xea
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: no_op
# COMMAND MONITOR: A:0x51 B:0xff op: no_op
# COMMAND MONITOR: A:0xb0 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x4f
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x61 B:0x55 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x58 B:0xc3 op: no_op
# COMMAND MONITOR: A:0x00 B:0xd6 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x77 op: and_op
# RESULT MONITOR: resultA: 0x77
# COMMAND MONITOR: A:0xf8 B:0x6c op: no_op
# COMMAND MONITOR: A:0x9c B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x28 B:0x9a op: no_op
# COMMAND MONITOR: A:0xfb B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x4
# COMMAND MONITOR: A:0x00 B:0x9e op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1fe
# COMMAND MONITOR: A:0x00 B:0x7e op: add_op
# RESULT MONITOR: resultA: 0x7e
# COMMAND MONITOR: A:0x49 B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x48b7
# COMMAND MONITOR: A:0xff B:0xff op: mul_op
# RESULT MONITOR: resultA: 0xfe01
# COMMAND MONITOR: A:0x77 B:0xe6 op: add_op
# RESULT MONITOR: resultA: 0x15d
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xff B:0xa0 op: and_op
# RESULT MONITOR: resultA: 0xa0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xdf B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x00 op: add_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xff B:0x2f op: no_op
# COMMAND MONITOR: A:0xbc B:0xa7 op: mul_op
# RESULT MONITOR: resultA: 0x7aa4
# COMMAND MONITOR: A:0x00 B:0x69 op: add_op
# RESULT MONITOR: resultA: 0x69
# COMMAND MONITOR: A:0xff B:0xe8 op: and_op
# RESULT MONITOR: resultA: 0xe8
# COMMAND MONITOR: A:0x37 B:0xf8 op: xor_op
# RESULT MONITOR: resultA: 0xcf
# COMMAND MONITOR: A:0x22 B:0x00 op: no_op
# COMMAND MONITOR: A:0x1e B:0xeb op: and_op
# RESULT MONITOR: resultA: 0xa
# COMMAND MONITOR: A:0x5e B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x5e
# COMMAND MONITOR: A:0xff B:0x37 op: no_op
# COMMAND MONITOR: A:0xce B:0xd5 op: xor_op
# RESULT MONITOR: resultA: 0x1b
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0xe3 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x5c B:0xec op: xor_op
# RESULT MONITOR: resultA: 0xb0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xc9 op: mul_op
# RESULT MONITOR: resultA: 0xc837
# COMMAND MONITOR: A:0xad B:0xff op: mul_op
# RESULT MONITOR: resultA: 0xac53
# COMMAND MONITOR: A:0x00 B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xca B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1c9
# COMMAND MONITOR: A:0x00 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0xac op: add_op
# RESULT MONITOR: resultA: 0xac
# COMMAND MONITOR: A:0xff B:0x0d op: add_op
# RESULT MONITOR: resultA: 0x10c
# COMMAND MONITOR: A:0xff B:0x2f op: add_op
# RESULT MONITOR: resultA: 0x12e
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xe9 B:0x8d op: xor_op
# RESULT MONITOR: resultA: 0x64
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xd1 op: no_op
# COMMAND MONITOR: A:0xff B:0x58 op: xor_op
# RESULT MONITOR: resultA: 0xa7
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x4d op: mul_op
# RESULT MONITOR: resultA: 0x4cb3
# COMMAND MONITOR: A:0xff B:0xb9 op: xor_op
# RESULT MONITOR: resultA: 0x46
# COMMAND MONITOR: A:0x81 B:0x8f op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x9a B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x9a
# COMMAND MONITOR: A:0xff B:0xd8 op: add_op
# RESULT MONITOR: resultA: 0x1d7
# COMMAND MONITOR: A:0x25 B:0x56 op: no_op
# COMMAND MONITOR: A:0xff B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xd1 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x51 B:0x45 op: mul_op
# RESULT MONITOR: resultA: 0x15d5
# COMMAND MONITOR: A:0x80 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x80
# COMMAND MONITOR: A:0x31 B:0xff op: no_op
# COMMAND MONITOR: A:0xff B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xf1 B:0x9e op: mul_op
# RESULT MONITOR: resultA: 0x94be
# COMMAND MONITOR: A:0x0a B:0xff op: no_op
# COMMAND MONITOR: A:0x25 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x25
# COMMAND MONITOR: A:0x2f B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x6f op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x72 op: add_op
# RESULT MONITOR: resultA: 0x171
# COMMAND MONITOR: A:0xff B:0xcb op: and_op
# RESULT MONITOR: resultA: 0xcb
# COMMAND MONITOR: A:0xcb B:0x71 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x05 B:0xb8 op: mul_op
# RESULT MONITOR: resultA: 0x398
# COMMAND MONITOR: A:0x8d B:0xf1 op: no_op
# COMMAND MONITOR: A:0x34 B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x33cc
# COMMAND MONITOR: A:0x5e B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x9b B:0x6b op: no_op
# COMMAND MONITOR: A:0xff B:0xd9 op: xor_op
# RESULT MONITOR: resultA: 0x26
# COMMAND MONITOR: A:0x00 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x05 op: no_op
# COMMAND MONITOR: A:0x00 B:0xff op: add_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xff B:0x57 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x66 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x50 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x6a B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x1e op: add_op
# RESULT MONITOR: resultA: 0x1e
# COMMAND MONITOR: A:0xd6 B:0xa9 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x25 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x25
# COMMAND MONITOR: A:0x9f B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x85 B:0xff op: add_op
# RESULT MONITOR: resultA: 0x184
# COMMAND MONITOR: A:0x34 B:0x51 op: no_op
# COMMAND MONITOR: A:0x00 B:0xb4 op: xor_op
# RESULT MONITOR: resultA: 0xb4
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x84 op: mul_op
# RESULT MONITOR: resultA: 0x837c
# COMMAND MONITOR: A:0xff B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1fe
# COMMAND MONITOR: A:0x00 B:0x5d op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x5d B:0x76 op: no_op
# COMMAND MONITOR: A:0xff B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0xcd op: no_op
# COMMAND MONITOR: A:0xa9 B:0xdd op: and_op
# RESULT MONITOR: resultA: 0x89
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0xb3 B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1b2
# COMMAND MONITOR: A:0xfc B:0xff op: no_op
# COMMAND MONITOR: A:0x75 B:0x0d op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xa6 op: and_op
# RESULT MONITOR: resultA: 0xa6
# COMMAND MONITOR: A:0xff B:0xb1 op: xor_op
# RESULT MONITOR: resultA: 0x4e
# COMMAND MONITOR: A:0xf6 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x3e op: mul_op
# RESULT MONITOR: resultA: 0x3dc2
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0xff B:0xd7 op: add_op
# RESULT MONITOR: resultA: 0x1d6
# COMMAND MONITOR: A:0x4a B:0x41 op: xor_op
# RESULT MONITOR: resultA: 0xb
# COMMAND MONITOR: A:0x71 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0xfe op: xor_op
# RESULT MONITOR: resultA: 0xfe
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xf9 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0xff op: no_op
# COMMAND MONITOR: A:0x67 B:0x00 op: no_op
# COMMAND MONITOR: A:0xcf B:0xf2 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x21 op: add_op
# RESULT MONITOR: resultA: 0x21
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x2d B:0x07 op: and_op
# RESULT MONITOR: resultA: 0x5
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x71 op: and_op
# RESULT MONITOR: resultA: 0x71
# COMMAND MONITOR: A:0x00 B:0xf2 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x93 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x93
# COMMAND MONITOR: A:0x72 B:0xb5 op: mul_op
# RESULT MONITOR: resultA: 0x509a
# COMMAND MONITOR: A:0x00 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x57 B:0xb4 op: add_op
# RESULT MONITOR: resultA: 0x10b
# COMMAND MONITOR: A:0xff B:0x72 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x96 B:0x87 op: xor_op
# RESULT MONITOR: resultA: 0x11
# COMMAND MONITOR: A:0x00 B:0x22 op: no_op
# COMMAND MONITOR: A:0xff B:0xb0 op: xor_op
# RESULT MONITOR: resultA: 0x4f
# COMMAND MONITOR: A:0x00 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x9d B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x4f B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0xbd op: xor_op
# RESULT MONITOR: resultA: 0xbd
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0x0b B:0x8f op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x1a B:0xff op: no_op
# COMMAND MONITOR: A:0x13 B:0x1d op: and_op
# RESULT MONITOR: resultA: 0x11
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x59 B:0x8d op: mul_op
# RESULT MONITOR: resultA: 0x3105
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0xff B:0xff op: mul_op
# RESULT MONITOR: resultA: 0xfe01
# COMMAND MONITOR: A:0xff B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xe4 B:0xae op: mul_op
# RESULT MONITOR: resultA: 0x9af8
# COMMAND MONITOR: A:0x00 B:0x0d op: add_op
# RESULT MONITOR: resultA: 0xd
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x37 B:0xff op: add_op
# RESULT MONITOR: resultA: 0x136
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x5b B:0x00 op: no_op
# COMMAND MONITOR: A:0x7c B:0xf1 op: no_op
# COMMAND MONITOR: A:0xff B:0x6f op: add_op
# RESULT MONITOR: resultA: 0x16e
# COMMAND MONITOR: A:0xff B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x3b B:0x62 op: and_op
# RESULT MONITOR: resultA: 0x22
# COMMAND MONITOR: A:0xff B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xdf B:0x83 op: add_op
# RESULT MONITOR: resultA: 0x162
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x3b op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x4b B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xd3 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0xd3
# COMMAND MONITOR: A:0x75 B:0x2a op: xor_op
# RESULT MONITOR: resultA: 0x5f
# COMMAND MONITOR: A:0x00 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0xf3 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x80 B:0xeb op: and_op
# RESULT MONITOR: resultA: 0x80
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: no_op
# COMMAND MONITOR: A:0xff B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x02 B:0xa1 op: add_op
# RESULT MONITOR: resultA: 0xa3
# COMMAND MONITOR: A:0xe4 B:0x44 op: no_op
# COMMAND MONITOR: A:0x00 B:0xdc op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x2a B:0x4b op: mul_op
# RESULT MONITOR: resultA: 0xc4e
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x2d op: no_op
# COMMAND MONITOR: A:0xff B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1fe
# COMMAND MONITOR: A:0xff B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x51 B:0x54 op: add_op
# RESULT MONITOR: resultA: 0xa5
# COMMAND MONITOR: A:0xf3 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x49 B:0xae op: xor_op
# RESULT MONITOR: resultA: 0xe7
# COMMAND MONITOR: A:0xff B:0x07 op: no_op
# COMMAND MONITOR: A:0xff B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xc9 B:0x8a op: add_op
# RESULT MONITOR: resultA: 0x153
# COMMAND MONITOR: A:0x8f B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0xc9 op: no_op
# COMMAND MONITOR: A:0xff B:0xc7 op: and_op
# RESULT MONITOR: resultA: 0xc7
# COMMAND MONITOR: A:0xb6 B:0x00 op: no_op
# COMMAND MONITOR: A:0xa4 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0xc1 op: xor_op
# RESULT MONITOR: resultA: 0x3e
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x00 op: add_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x85 B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x89 op: add_op
# RESULT MONITOR: resultA: 0x89
# COMMAND MONITOR: A:0x0b B:0x1c op: mul_op
# RESULT MONITOR: resultA: 0x134
# COMMAND MONITOR: A:0xd5 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x16 B:0xff op: add_op
# RESULT MONITOR: resultA: 0x115
# COMMAND MONITOR: A:0x00 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0xb3 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x41 op: no_op
# COMMAND MONITOR: A:0xff B:0xd3 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x00 op: no_op
# COMMAND MONITOR: A:0xff B:0x34 op: mul_op
# RESULT MONITOR: resultA: 0x33cc
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0xeb op: mul_op
# RESULT MONITOR: resultA: 0xea15
# COMMAND MONITOR: A:0x76 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0x3f B:0xff op: xor_op
# RESULT MONITOR: resultA: 0xc0
# COMMAND MONITOR: A:0x00 B:0x65 op: add_op
# RESULT MONITOR: resultA: 0x65
# COMMAND MONITOR: A:0xb2 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0xb2
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x86 B:0x52 op: add_op
# RESULT MONITOR: resultA: 0xd8
# COMMAND MONITOR: A:0xff B:0x20 op: and_op
# RESULT MONITOR: resultA: 0x20
# COMMAND MONITOR: A:0x8e B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0xff op: and_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x7b B:0x7d op: and_op
# RESULT MONITOR: resultA: 0x79
# COMMAND MONITOR: A:0x2b B:0xc4 op: no_op
# COMMAND MONITOR: A:0xff B:0xda op: mul_op
# RESULT MONITOR: resultA: 0xd926
# COMMAND MONITOR: A:0x00 B:0xff op: add_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xe1 B:0x69 op: mul_op
# RESULT MONITOR: resultA: 0x5c49
# COMMAND MONITOR: A:0x00 B:0x20 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xda B:0x81 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x76 B:0x3f op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xff op: and_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x60 op: no_op
# COMMAND MONITOR: A:0x42 B:0x41 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xa3 B:0xfd op: no_op
# COMMAND MONITOR: A:0x59 B:0xff op: add_op
# RESULT MONITOR: resultA: 0x158
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x38 B:0x00 op: no_op
# COMMAND MONITOR: A:0xff B:0x7d op: add_op
# RESULT MONITOR: resultA: 0x17c
# COMMAND MONITOR: A:0x0d B:0xa3 op: add_op
# RESULT MONITOR: resultA: 0xb0
# COMMAND MONITOR: A:0xe2 B:0x00 op: no_op
# COMMAND MONITOR: A:0x0b B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x45 op: no_op
# COMMAND MONITOR: A:0x88 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x88
# COMMAND MONITOR: A:0x68 B:0xd2 op: no_op
# COMMAND MONITOR: A:0x08 B:0x5a op: mul_op
# RESULT MONITOR: resultA: 0x2d0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0x1c B:0x47 op: xor_op
# RESULT MONITOR: resultA: 0x5b
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x2c B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x27 B:0x6c op: no_op
# COMMAND MONITOR: A:0xaf B:0xd3 op: and_op
# RESULT MONITOR: resultA: 0x83
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1fe
# COMMAND MONITOR: A:0x54 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x54
# COMMAND MONITOR: A:0x9f B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x9e61
# COMMAND MONITOR: A:0xff B:0xff op: mul_op
# RESULT MONITOR: resultA: 0xfe01
# COMMAND MONITOR: A:0x1c B:0xac op: and_op
# RESULT MONITOR: resultA: 0xc
# COMMAND MONITOR: A:0x90 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x94 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xe8 B:0x00 op: no_op
# COMMAND MONITOR: A:0x32 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x0b op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x15 B:0xff op: add_op
# RESULT MONITOR: resultA: 0x114
# COMMAND MONITOR: A:0xda B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xda
# COMMAND MONITOR: A:0xff B:0xb5 op: and_op
# RESULT MONITOR: resultA: 0xb5
# COMMAND MONITOR: A:0xff B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1fe
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xd3 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x79 op: add_op
# RESULT MONITOR: resultA: 0x79
# COMMAND MONITOR: A:0xd5 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x72 op: xor_op
# RESULT MONITOR: resultA: 0x8d
# COMMAND MONITOR: A:0x00 B:0x07 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xda B:0xc5 op: no_op
# COMMAND MONITOR: A:0x00 B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xc1 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xf8 B:0xaf op: xor_op
# RESULT MONITOR: resultA: 0x57
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x6f B:0x33 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xd6 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x04 op: no_op
# COMMAND MONITOR: A:0xff B:0xff op: and_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xff B:0xff op: mul_op
# RESULT MONITOR: resultA: 0xfe01
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x1c B:0xb4 op: xor_op
# RESULT MONITOR: resultA: 0xa8
# COMMAND MONITOR: A:0x00 B:0x53 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x4a B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x49b6
# COMMAND MONITOR: A:0x89 B:0x65 op: add_op
# RESULT MONITOR: resultA: 0xee
# COMMAND MONITOR: A:0xff B:0x9b op: no_op
# COMMAND MONITOR: A:0x49 B:0x5d op: add_op
# RESULT MONITOR: resultA: 0xa6
# COMMAND MONITOR: A:0x8c B:0x64 op: mul_op
# RESULT MONITOR: resultA: 0x36b0
# COMMAND MONITOR: A:0x50 B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x3b op: xor_op
# RESULT MONITOR: resultA: 0x3b
# COMMAND MONITOR: A:0x75 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x8a
# COMMAND MONITOR: A:0xf6 B:0x19 op: mul_op
# RESULT MONITOR: resultA: 0x1806
# COMMAND MONITOR: A:0xff B:0xe0 op: no_op
# COMMAND MONITOR: A:0xff B:0xf3 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x9a B:0xb9 op: mul_op
# RESULT MONITOR: resultA: 0x6f4a
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0xe0 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0xe0
# COMMAND MONITOR: A:0x5f B:0xa4 op: add_op
# RESULT MONITOR: resultA: 0x103
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x2a op: xor_op
# RESULT MONITOR: resultA: 0xd5
# COMMAND MONITOR: A:0x43 B:0x00 op: no_op
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x38 op: add_op
# RESULT MONITOR: resultA: 0x38
# COMMAND MONITOR: A:0x00 B:0xbf op: xor_op
# RESULT MONITOR: resultA: 0xbf
# COMMAND MONITOR: A:0x2b B:0xff op: add_op
# RESULT MONITOR: resultA: 0x12a
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x27 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xa9 B:0x89 op: mul_op
# RESULT MONITOR: resultA: 0x5a71
# COMMAND MONITOR: A:0xff B:0x58 op: xor_op
# RESULT MONITOR: resultA: 0xa7
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xc9 op: xor_op
# RESULT MONITOR: resultA: 0x36
# COMMAND MONITOR: A:0x5b B:0x6d op: and_op
# RESULT MONITOR: resultA: 0x49
# COMMAND MONITOR: A:0xff B:0x29 op: add_op
# RESULT MONITOR: resultA: 0x128
# COMMAND MONITOR: A:0x9a B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x9a
# COMMAND MONITOR: A:0xff B:0x48 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x19 B:0x90 op: and_op
# RESULT MONITOR: resultA: 0x10
# COMMAND MONITOR: A:0x00 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xf1 op: no_op
# COMMAND MONITOR: A:0x22 B:0xff op: no_op
# COMMAND MONITOR: A:0xc3 B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1c2
# COMMAND MONITOR: A:0xb2 B:0x8e op: no_op
# COMMAND MONITOR: A:0x47 B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x47 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x60 op: add_op
# RESULT MONITOR: resultA: 0x60
# COMMAND MONITOR: A:0x00 B:0x43 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x1e B:0xff op: add_op
# RESULT MONITOR: resultA: 0x11d
# COMMAND MONITOR: A:0xff B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1fe
# COMMAND MONITOR: A:0xff B:0xd7 op: and_op
# RESULT MONITOR: resultA: 0xd7
# COMMAND MONITOR: A:0x00 B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0xff op: add_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0xe8 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xb5 op: add_op
# RESULT MONITOR: resultA: 0xb5
# COMMAND MONITOR: A:0xe7 B:0x0a op: and_op
# RESULT MONITOR: resultA: 0x2
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xcf op: no_op
# COMMAND MONITOR: A:0xc3 B:0x82 op: add_op
# RESULT MONITOR: resultA: 0x145
# COMMAND MONITOR: A:0x00 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x6a B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0xff op: no_op
# COMMAND MONITOR: A:0xff B:0x8e op: xor_op
# RESULT MONITOR: resultA: 0x71
# COMMAND MONITOR: A:0x00 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x3b op: no_op
# COMMAND MONITOR: A:0x77 B:0x39 op: no_op
# COMMAND MONITOR: A:0xfb B:0x40 op: no_op
# COMMAND MONITOR: A:0x00 B:0xff op: add_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xff B:0x0c op: mul_op
# RESULT MONITOR: resultA: 0xbf4
# COMMAND MONITOR: A:0xe8 B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x13 op: no_op
# COMMAND MONITOR: A:0xce B:0x52 op: no_op
# COMMAND MONITOR: A:0xdb B:0x00 op: add_op
# RESULT MONITOR: resultA: 0xdb
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x69 op: add_op
# RESULT MONITOR: resultA: 0x168
# COMMAND MONITOR: A:0x00 B:0xc0 op: xor_op
# RESULT MONITOR: resultA: 0xc0
# COMMAND MONITOR: A:0xb7 B:0x8b op: mul_op
# RESULT MONITOR: resultA: 0x635d
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x15 B:0xff op: no_op
# COMMAND MONITOR: A:0xff B:0xd2 op: no_op
# COMMAND MONITOR: A:0x00 B:0xb6 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xc8 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x37
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0x39 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x6a op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x99 op: no_op
# COMMAND MONITOR: A:0x00 B:0xfb op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x89 B:0xcc op: no_op
# COMMAND MONITOR: A:0xff B:0x00 op: add_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x9a B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: no_op
# COMMAND MONITOR: A:0xff B:0x0d op: xor_op
# RESULT MONITOR: resultA: 0xf2
# COMMAND MONITOR: A:0xff B:0x68 op: mul_op
# RESULT MONITOR: resultA: 0x6798
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x7a B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x85
# COMMAND MONITOR: A:0xdf B:0xe3 op: xor_op
# RESULT MONITOR: resultA: 0x3c
# COMMAND MONITOR: A:0xff B:0x49 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x4b op: and_op
# RESULT MONITOR: resultA: 0x4b
# COMMAND MONITOR: A:0xe8 B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1e7
# COMMAND MONITOR: A:0xcb B:0x00 op: no_op
# COMMAND MONITOR: A:0xd6 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xd5 B:0xc9 op: add_op
# RESULT MONITOR: resultA: 0x19e
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x96 B:0x70 op: add_op
# RESULT MONITOR: resultA: 0x106
# COMMAND MONITOR: A:0x00 B:0xd8 op: xor_op
# RESULT MONITOR: resultA: 0xd8
# COMMAND MONITOR: A:0xff B:0x3b op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x96 op: no_op
# COMMAND MONITOR: A:0xff B:0xf6 op: and_op
# RESULT MONITOR: resultA: 0xf6
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x34 B:0x34 op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x91 B:0x86 op: xor_op
# RESULT MONITOR: resultA: 0x17
# COMMAND MONITOR: A:0xff B:0xff op: and_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x95 op: xor_op
# RESULT MONITOR: resultA: 0x95
# COMMAND MONITOR: A:0x00 B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xc4 B:0xa9 op: mul_op
# RESULT MONITOR: resultA: 0x8164
# COMMAND MONITOR: A:0x00 B:0x03 op: no_op
# COMMAND MONITOR: A:0x38 B:0xee op: mul_op
# RESULT MONITOR: resultA: 0x3410
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x38 B:0xdc op: xor_op
# RESULT MONITOR: resultA: 0xe4
# COMMAND MONITOR: A:0x3d B:0xfd op: no_op
# COMMAND MONITOR: A:0xff B:0x0c op: mul_op
# RESULT MONITOR: resultA: 0xbf4
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x3d B:0xac op: no_op
# COMMAND MONITOR: A:0xff B:0xc7 op: no_op
# COMMAND MONITOR: A:0x7e B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x32 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x32
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x1e op: no_op
# COMMAND MONITOR: A:0xee B:0x89 op: no_op
# COMMAND MONITOR: A:0xff B:0x68 op: add_op
# RESULT MONITOR: resultA: 0x167
# COMMAND MONITOR: A:0x8c B:0xe1 op: add_op
# RESULT MONITOR: resultA: 0x16d
# COMMAND MONITOR: A:0x5f B:0xff op: no_op
# COMMAND MONITOR: A:0xff B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xff B:0xff op: and_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x3c B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0xa4 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x23 op: no_op
# COMMAND MONITOR: A:0x31 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0xce
# COMMAND MONITOR: A:0xff B:0x0d op: no_op
# COMMAND MONITOR: A:0xff B:0x3b op: xor_op
# RESULT MONITOR: resultA: 0xc4
# COMMAND MONITOR: A:0x00 B:0x05 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xb2 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x4d
# COMMAND MONITOR: A:0xc2 B:0xb8 op: xor_op
# RESULT MONITOR: resultA: 0x7a
# COMMAND MONITOR: A:0x00 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x77 B:0xff op: and_op
# RESULT MONITOR: resultA: 0x77
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x87 op: add_op
# RESULT MONITOR: resultA: 0x186
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x2d B:0xff op: and_op
# RESULT MONITOR: resultA: 0x2d
# COMMAND MONITOR: A:0xbc B:0x16 op: mul_op
# RESULT MONITOR: resultA: 0x1028
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0xb3 op: add_op
# RESULT MONITOR: resultA: 0xb3
# COMMAND MONITOR: A:0x00 B:0xa7 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0xff B:0x92 op: no_op
# COMMAND MONITOR: A:0xeb B:0x66 op: add_op
# RESULT MONITOR: resultA: 0x151
# COMMAND MONITOR: A:0xff B:0x4b op: no_op
# COMMAND MONITOR: A:0x9c B:0x2e op: and_op
# RESULT MONITOR: resultA: 0xc
# COMMAND MONITOR: A:0x81 B:0xff op: add_op
# RESULT MONITOR: resultA: 0x180
# COMMAND MONITOR: A:0xd1 B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1d0
# COMMAND MONITOR: A:0x00 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xad B:0x00 op: add_op
# RESULT MONITOR: resultA: 0xad
# COMMAND MONITOR: A:0x96 B:0x31 op: xor_op
# RESULT MONITOR: resultA: 0xa7
# COMMAND MONITOR: A:0x00 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x4f op: xor_op
# RESULT MONITOR: resultA: 0x4f
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xd9 B:0xff op: no_op
# COMMAND MONITOR: A:0xff B:0xff op: mul_op
# RESULT MONITOR: resultA: 0xfe01
# COMMAND MONITOR: A:0xcf B:0xff op: and_op
# RESULT MONITOR: resultA: 0xcf
# COMMAND MONITOR: A:0xff B:0x00 op: add_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xdd B:0xf9 op: mul_op
# RESULT MONITOR: resultA: 0xd6f5
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xa2 B:0x3b op: no_op
# COMMAND MONITOR: A:0x27 B:0x00 op: no_op
# COMMAND MONITOR: A:0xb0 B:0x2f op: add_op
# RESULT MONITOR: resultA: 0xdf
# COMMAND MONITOR: A:0xff B:0x26 op: no_op
# COMMAND MONITOR: A:0xff B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x03 B:0x25 op: no_op
# COMMAND MONITOR: A:0xff B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x23 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xef op: no_op
# COMMAND MONITOR: A:0x00 B:0x82 op: no_op
# COMMAND MONITOR: A:0xe3 B:0x97 op: mul_op
# RESULT MONITOR: resultA: 0x85e5
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xf6 op: no_op
# COMMAND MONITOR: A:0x7e B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x8f B:0xff op: and_op
# RESULT MONITOR: resultA: 0x8f
# COMMAND MONITOR: A:0x5e B:0xff op: xor_op
# RESULT MONITOR: resultA: 0xa1
# COMMAND MONITOR: A:0xff B:0x43 op: add_op
# RESULT MONITOR: resultA: 0x142
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x2c B:0x00 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xd2 B:0xe3 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x2d B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x2d
# COMMAND MONITOR: A:0x00 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0xff op: and_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x75 B:0x3a op: no_op
# COMMAND MONITOR: A:0xff B:0x60 op: no_op
# COMMAND MONITOR: A:0x00 B:0x20 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0xc7 op: xor_op
# RESULT MONITOR: resultA: 0x38
# COMMAND MONITOR: A:0xff B:0xd1 op: no_op
# COMMAND MONITOR: A:0xde B:0x5a op: and_op
# RESULT MONITOR: resultA: 0x5a
# COMMAND MONITOR: A:0xff B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1fe
# COMMAND MONITOR: A:0x00 B:0x91 op: xor_op
# RESULT MONITOR: resultA: 0x91
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0xd5 op: no_op
# COMMAND MONITOR: A:0xff B:0x14 op: add_op
# RESULT MONITOR: resultA: 0x113
# COMMAND MONITOR: A:0xff B:0x2c op: add_op
# RESULT MONITOR: resultA: 0x12b
# COMMAND MONITOR: A:0x00 B:0x20 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0xd9 op: add_op
# RESULT MONITOR: resultA: 0x1d8
# COMMAND MONITOR: A:0x1f B:0xff op: xor_op
# RESULT MONITOR: resultA: 0xe0
# COMMAND MONITOR: A:0x44 B:0xfa op: no_op
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xd9 B:0xfa op: xor_op
# RESULT MONITOR: resultA: 0x23
# COMMAND MONITOR: A:0x6b B:0x7d op: add_op
# RESULT MONITOR: resultA: 0xe8
# COMMAND MONITOR: A:0x9a B:0x8c op: xor_op
# RESULT MONITOR: resultA: 0x16
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xcd B:0xff op: mul_op
# RESULT MONITOR: resultA: 0xcc33
# COMMAND MONITOR: A:0x36 B:0xff op: no_op
# COMMAND MONITOR: A:0xcb B:0x00 op: add_op
# RESULT MONITOR: resultA: 0xcb
# COMMAND MONITOR: A:0x5d B:0xe2 op: mul_op
# RESULT MONITOR: resultA: 0x521a
# COMMAND MONITOR: A:0xfa B:0x5c op: and_op
# RESULT MONITOR: resultA: 0x58
# COMMAND MONITOR: A:0x00 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x7b B:0x84 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xff B:0xff op: no_op
# COMMAND MONITOR: A:0xff B:0xaf op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0xff B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xdc B:0xff op: mul_op
# RESULT MONITOR: resultA: 0xdb24
# COMMAND MONITOR: A:0xff B:0x9c op: xor_op
# RESULT MONITOR: resultA: 0x63
# COMMAND MONITOR: A:0x2b B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x2ad5
# COMMAND MONITOR: A:0xe1 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x1e
# COMMAND MONITOR: A:0xff B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x55 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xed B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0xb0 op: xor_op
# RESULT MONITOR: resultA: 0xb0
# COMMAND MONITOR: A:0x82 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0xff op: add_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xff B:0x32 op: add_op
# RESULT MONITOR: resultA: 0x131
# COMMAND MONITOR: A:0x00 B:0x5e op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xc2 op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0x00 op: add_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x9e B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x9e
# COMMAND MONITOR: A:0xff B:0x5a op: no_op
# COMMAND MONITOR: A:0xa5 B:0xba op: no_op
# COMMAND MONITOR: A:0x00 B:0x5d op: no_op
# COMMAND MONITOR: A:0xff B:0x5e op: no_op
# COMMAND MONITOR: A:0xff B:0x6b op: xor_op
# RESULT MONITOR: resultA: 0x94
# COMMAND MONITOR: A:0xff B:0x4d op: and_op
# RESULT MONITOR: resultA: 0x4d
# COMMAND MONITOR: A:0x00 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xca op: no_op
# COMMAND MONITOR: A:0x00 B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xed B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xff B:0x01 op: mul_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x00 op: no_op
# COMMAND MONITOR: A:0x7d B:0xff op: add_op
# RESULT MONITOR: resultA: 0x17c
# COMMAND MONITOR: A:0x94 B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x936c
# COMMAND MONITOR: A:0x0d B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xd
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x59 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xa4 op: xor_op
# RESULT MONITOR: resultA: 0xa4
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x11 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x11
# COMMAND MONITOR: A:0xff B:0x68 op: and_op
# RESULT MONITOR: resultA: 0x68
# COMMAND MONITOR: A:0xc2 B:0x9a op: and_op
# RESULT MONITOR: resultA: 0x82
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xff op: add_op
# RESULT MONITOR: resultA: 0x1fe
# COMMAND MONITOR: A:0x68 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x68
# COMMAND MONITOR: A:0xdc B:0x66 op: add_op
# RESULT MONITOR: resultA: 0x142
# COMMAND MONITOR: A:0xff B:0x9f op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xd7 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xff B:0xd4 op: xor_op
# RESULT MONITOR: resultA: 0x2b
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: add_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x8e B:0xb3 op: no_op
# COMMAND MONITOR: A:0x38 B:0xd2 op: no_op
# COMMAND MONITOR: A:0xff B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xd9 B:0xc6 op: no_op
# COMMAND MONITOR: A:0x58 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: no_op
# COMMAND MONITOR: A:0xff B:0xff op: and_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x6d B:0xff op: and_op
# RESULT MONITOR: resultA: 0x6d
# COMMAND MONITOR: A:0x34 B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xde B:0xc1 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x39 B:0xff op: no_op
# COMMAND MONITOR: A:0xe8 B:0x4d op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x2b B:0xc5 op: no_op
# COMMAND MONITOR: A:0x18 B:0xfa op: no_op
# COMMAND MONITOR: A:0x4c B:0xff op: and_op
# RESULT MONITOR: resultA: 0x4c
# COMMAND MONITOR: A:0x7d B:0xff op: no_op
# COMMAND MONITOR: A:0x63 B:0x58 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x2d B:0xaf op: and_op
# RESULT MONITOR: resultA: 0x2d
# COMMAND MONITOR: A:0xe6 B:0x00 op: no_op
# COMMAND MONITOR: A:0xd3 B:0x10 op: mul_op
# RESULT MONITOR: resultA: 0xd30
# COMMAND MONITOR: A:0x20 B:0x13 op: no_op
# COMMAND MONITOR: A:0xca B:0xed op: xor_op
# RESULT MONITOR: resultA: 0x27
# COMMAND MONITOR: A:0x45 B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xb7 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xb7
# COMMAND MONITOR: A:0x6d B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x4e B:0xc6 op: no_op
# COMMAND MONITOR: A:0x8d B:0x59 op: mul_op
# RESULT MONITOR: resultA: 0x3105
# COMMAND MONITOR: A:0xa9 B:0x2f op: and_op
# RESULT MONITOR: resultA: 0x29
# COMMAND MONITOR: A:0x00 B:0x44 op: add_op
# RESULT MONITOR: resultA: 0x44
# COMMAND MONITOR: A:0x00 B:0xad op: add_op
# RESULT MONITOR: resultA: 0xad
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x61 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xc3 B:0xa2 op: mul_op
# RESULT MONITOR: resultA: 0x7b66
# COMMAND MONITOR: A:0x62 B:0xa3 op: add_op
# RESULT MONITOR: resultA: 0x105
# COMMAND MONITOR: A:0x00 B:0x3f op: and_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x3b op: no_op
# COMMAND MONITOR: A:0x73 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x4f B:0x00 op: no_op
# COMMAND MONITOR: A:0xec B:0xb0 op: and_op
# RESULT MONITOR: resultA: 0xa0
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x8f B:0x4d op: add_op
# RESULT MONITOR: resultA: 0xdc
# COMMAND MONITOR: A:0x0a B:0x11 op: no_op
# COMMAND MONITOR: A:0x4b B:0xff op: add_op
# RESULT MONITOR: resultA: 0x14a
# COMMAND MONITOR: A:0x53 B:0x08 op: no_op
# COMMAND MONITOR: A:0xb0 B:0xc6 op: and_op
# RESULT MONITOR: resultA: 0x80
# COMMAND MONITOR: A:0x0b B:0xff op: add_op
# RESULT MONITOR: resultA: 0x10a
# COMMAND MONITOR: A:0x00 B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xde B:0xb6 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x4d B:0x47 op: add_op
# RESULT MONITOR: resultA: 0x94
# COMMAND MONITOR: A:0xff B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x48 B:0xa9 op: add_op
# RESULT MONITOR: resultA: 0xf1
# COMMAND MONITOR: A:0x00 B:0x00 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0x67 B:0xff op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x22 op: mul_op
# RESULT MONITOR: resultA: 0x21de
# COMMAND MONITOR: A:0x45 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xc4 B:0xff op: xor_op
# RESULT MONITOR: resultA: 0x3b
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x43 op: and_op
# RESULT MONITOR: resultA: 0x43
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0xff op: and_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x39 B:0x87 op: no_op
# COMMAND MONITOR: A:0x00 B:0x00 op: rst_op
# COMMAND MONITOR: A:0xff B:0x00 op: xor_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0x00 B:0xff op: add_op
# RESULT MONITOR: resultA: 0xff
# COMMAND MONITOR: A:0xf5 B:0x00 op: no_op
# COMMAND MONITOR: A:0x00 B:0x44 op: mul_op
# RESULT MONITOR: resultA: 0x0
# COMMAND MONITOR: A:0xaf B:0x22 op: mul_op
# RESULT MONITOR: resultA: 0x173e
# UVM_INFO verilog_src/uvm-1.1d/src/base/uvm_objection.svh(1268) @ 40231: reporter [TEST_DONE] 'run' phase is ready to proceed to the 'extract' phase
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :    4
# UVM_WARNING :    0
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [Questa UVM]     2
# [RNTST]     1
# [TEST_DONE]     1
# ** Note: $finish    : C:/questasim64_10.4d/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 40231 ns  Iteration: 56  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at C:/questasim64_10.4d/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
# coverage exclude -src ../../tinyalu_dut/single_cycle_add_and_xor.vhd -scope /top/DUT/add_and_xor -line 49 -code b
# ** Warning: (vsim-4036) The 'coverage exclude' command had no effect on some/all objects because
# no matching coverage data was found.
# 
# End time: 14:18:22 on Mar 30,2022, Elapsed time: 0:00:22
# Errors: 0, Warnings: 1
# vsim top_optimized -coverage "+UVM_TESTNAME=add_test" 
# Start time: 14:18:22 on Mar 30,2022
# Loading sv_std.std
# Loading mtiUvm.uvm_pkg
# Loading work.tinyalu_pkg(fast)
# Loading work.top(fast)
# Loading work.tinyalu_bfm(fast__1)
# Loading mtiUvm.questa_uvm_pkg(fast)
# Loading work.tinyalu_bfm(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.std_logic_arith(body)
# Loading work.tinyalu(rtl)#1
# Loading work.single_cycle(add_and_xor)#1
# Loading work.three_cycle(mult)#1
# Loading C:/questasim64_10.4d/uvm-1.1d\win64\uvm_dpi.dll
# ** Warning: (vsim-PLI-3003) tb_classes/command_monitor.svh(47): [TOFD] - System task or function '$sprintf' is not defined.
#    Time: 0 ns  Iteration: 0  Region: /tinyalu_pkg::command_monitor::op2enum File: tinyalu_pkg.sv
# 1
# ----------------------------------------------------------------
# UVM-1.1d
# (C) 2007-2013 Mentor Graphics Corporation
# (C) 2007-2013 Cadence Design Systems, Inc.
# (C) 2006-2013 Synopsys, Inc.
# (C) 2011-2013 Cypress Semiconductor Corp.
# ----------------------------------------------------------------
# 
#   ***********       IMPORTANT RELEASE NOTES         ************
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_NO_DEPRECATED undefined.
#   See http://www.eda.org/svdb/view.php?id=3313 for more details.
# 
#   You are using a version of the UVM library that has been compiled
#   with `UVM_OBJECT_MUST_HAVE_CONSTRUCTOR undefined.
#   See http://www.eda.org/svdb/view.php?id=3770 for more details.
# 
#       (Specify +UVM_NO_RELNOTES to turn off this notice)
# 
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(215) @ 0: reporter [Questa UVM] QUESTA_UVM-1.2.3
# UVM_INFO verilog_src/questa_uvm_pkg-1.2/src/questa_uvm_pkg.sv(217) @ 0: reporter [Questa UVM]  questa_uvm::init(+struct)
# UVM_INFO @ 0: reporter [RNTST] Running test add_test...
# 
# --- UVM Report Summary ---
# 
# ** Report counts by severity
# UVM_INFO :    3
# UVM_WARNING :    0
# UVM_ERROR :    0
# UVM_FATAL :    0
# ** Report counts by id
# [Questa UVM]     2
# [RNTST]     1
# ** Note: $finish    : C:/questasim64_10.4d/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh(430)
#    Time: 0 ns  Iteration: 220  Instance: /top
# 1
# Break in Task uvm_pkg/uvm_root::run_test at C:/questasim64_10.4d/win64/../verilog_src/uvm-1.1d/src/base/uvm_root.svh line 430
# coverage exclude -src ../../tinyalu_dut/single_cycle_add_and_xor.vhd -scope /top/DUT/add_and_xor -line 49 -code b
# ** Warning: (vsim-4036) The 'coverage exclude' command had no effect on some/all objects because
# no matching coverage data was found.
# 
# QuestaSim-64 vcover 10.4d Coverage Utility 2015.12 Dec 30 2015
# Start time: 14:18:38 on Mar 30,2022
# vcover merge tinyalu.ucdb random_test.ucdb add_test.ucdb 
# Merging file random_test.ucdb
# Merging file add_test.ucdb
# Writing merged result to tinyalu.ucdb
# 
# End time: 14:18:38 on Mar 30,2022, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Start time: 14:18:38 on Mar 30,2022
# QuestaSim-64 vcover 10.4d Coverage Utility 2015.12 Dec 30 2015
# vcover report tinyalu.ucdb -cvg -details 
# COVERGROUP COVERAGE:
# -----------------------------------------------------------------------------------------------
# Covergroup                                             Metric       Goal    Status               
#                                                                                               
# -----------------------------------------------------------------------------------------------
#  TYPE /tinyalu_pkg/coverage/op_cov                      96.5%        100    Uncovered            
#     covered/total bins:                                    28         29                      
#     missing/total bins:                                     1         29                      
#     % Hit:                                              96.5%        100                      
#     Coverpoint op_cov::op_set                           96.5%        100    Uncovered            
#         covered/total bins:                                28         29                      
#         missing/total bins:                                 1         29                      
#         % Hit:                                          96.5%        100                      
#  CLASS coverage
#  Covergroup instance \/tinyalu_pkg::coverage::op_cov  
#                                                         96.5%        100    Uncovered            
#     covered/total bins:                                    28         29                      
#     missing/total bins:                                     1         29                      
#     % Hit:                                              96.5%        100                      
#     Coverpoint op_set                                   96.5%        100    Uncovered            
#         covered/total bins:                                28         29                      
#         missing/total bins:                                 1         29                      
#         % Hit:                                          96.5%        100                      
#         bin single_cycle[no_op]                           253          1    Covered              
#         bin single_cycle[add_op]                          131          1    Covered              
#         bin single_cycle[and_op]                          113          1    Covered              
#         bin single_cycle[xor_op]                          129          1    Covered              
#         bin single_cycle[rst_op]                          252          1    Covered              
#         bin multi_cycle                                   122          1    Covered              
#         bin opn_rst[mul_op=>rst_op]                        27          1    Covered              
#         bin opn_rst[xor_op=>rst_op]                        32          1    Covered              
#         bin opn_rst[and_op=>rst_op]                        31          1    Covered              
#         bin opn_rst[add_op=>rst_op]                        28          1    Covered              
#         bin rst_opn[rst_op=>mul_op]                        33          1    Covered              
#         bin rst_opn[rst_op=>xor_op]                        37          1    Covered              
#         bin rst_opn[rst_op=>and_op]                        25          1    Covered              
#         bin rst_opn[rst_op=>add_op]                        30          1    Covered              
#         bin sngl_mul[xor_op=>mul_op]                       18          1    Covered              
#         bin sngl_mul[and_op=>mul_op]                       13          1    Covered              
#         bin sngl_mul[add_op=>mul_op]                       13          1    Covered              
#         bin sngl_mul[no_op=>mul_op]                        30          1    Covered              
#         bin mul_sngl[mul_op=>xor_op]                       19          1    Covered              
#         bin mul_sngl[mul_op=>and_op]                       11          1    Covered              
#         bin mul_sngl[mul_op=>add_op]                       16          1    Covered              
#         bin mul_sngl[mul_op=>no_op]                        34          1    Covered              
#         bin twoops[mul_op[*2]]                             14          1    Covered              
#         bin twoops[xor_op[*2]]                             11          1    Covered              
#         bin twoops[and_op[*2]]                              8          1    Covered              
#         bin twoops[add_op[*2]]                             22          1    Covered              
#         bin manymult                                        0          1    ZERO                 
#         bin rstmulrst                                      53          1    Covered              
#         bin rstmulrstim                                    20          1    Covered              
#  TYPE /tinyalu_pkg/coverage/zeros_or_ones_on_ops       100.0%        100    Covered              
#     covered/total bins:                                    19         19                      
#     missing/total bins:                                     0         19                      
#     % Hit:                                             100.0%        100                      
#     Coverpoint zeros_or_ones_on_ops::all_ops           100.0%        100    Covered              
#         covered/total bins:                                 4          4                      
#         missing/total bins:                                 0          4                      
#         % Hit:                                         100.0%        100                      
#         ignore_bin null_ops                               505               Occurred             
#         bin auto[add_op]                                  131          1    Covered              
#         bin auto[and_op]                                  113          1    Covered              
#         bin auto[xor_op]                                  129          1    Covered              
#         bin auto[mul_op]                                  122          1    Covered              
#     Coverpoint zeros_or_ones_on_ops::a_leg             100.0%        100    Covered              
#         covered/total bins:                                 3          3                      
#         missing/total bins:                                 0          3                      
#         % Hit:                                         100.0%        100                      
#         bin zeros                                         451          1    Covered              
#         bin others                                        358          1    Covered              
#         bin ones                                          191          1    Covered              
#     Coverpoint zeros_or_ones_on_ops::b_leg             100.0%        100    Covered              
#         covered/total bins:                                 3          3                      
#         missing/total bins:                                 0          3                      
#         % Hit:                                         100.0%        100                      
#         bin zeros                                         438          1    Covered              
#         bin others                                        393          1    Covered              
#         bin ones                                          169          1    Covered              
#     Cross zeros_or_ones_on_ops::op_00_FF               100.0%        100    Covered              
#         covered/total bins:                                 9          9                      
#         missing/total bins:                                 0          9                      
#         % Hit:                                         100.0%        100                      
#         ignore_bin others_only                            111               Occurred             
#         bin add_00                                         51          1    Covered              
#         bin add_FF                                         60          1    Covered              
#         bin and_00                                         54          1    Covered              
#         bin and_FF                                         47          1    Covered              
#         bin xor_00                                         61          1    Covered              
#         bin xor_FF                                         61          1    Covered              
#         bin mul_00                                         64          1    Covered              
#         bin mul_FF                                         46          1    Covered              
#         bin mul_max                                         6          1    Covered              
#  CLASS coverage
# 
# TOTAL COVERGROUP COVERAGE: 98.2%  COVERGROUP TYPES: 2
# End time: 14:18:38 on Mar 30,2022, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 14:20:03 on Mar 30,2022, Elapsed time: 0:01:41
# Errors: 0, Warnings: 1
