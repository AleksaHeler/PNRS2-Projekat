$date
	Fri Apr 01 13:36:58 2022
$end
$version
	QuestaSim Version 10.7b
$end
$timescale
	1ns
$end

$scope module uvm_root $end
$upscope $end

$scope module tbench_top $end
$var reg 1 ! clk $end
$var reg 1 " rst $end

$scope module DUT $end
$var parameter 32 # ADDRESS_W $end
$var parameter 32 $ DATA_W $end
$var wire 1 % clk $end
$var wire 1 & rst $end
$var wire 1 ' address [3] $end
$var wire 1 ( address [2] $end
$var wire 1 ) address [1] $end
$var wire 1 * address [0] $end
$var wire 1 + write_en $end
$var wire 1 , read_en $end
$var wire 1 - data_wr [7] $end
$var wire 1 . data_wr [6] $end
$var wire 1 / data_wr [5] $end
$var wire 1 0 data_wr [4] $end
$var wire 1 1 data_wr [3] $end
$var wire 1 2 data_wr [2] $end
$var wire 1 3 data_wr [1] $end
$var wire 1 4 data_wr [0] $end
$var reg 8 5 data_rd [7:0] $end
$upscope $end
$upscope $end

$scope begin uvm_pkg $end
$var parameter 32 6 UVM_HDL_MAX_WIDTH $end
$var parameter 32 7 UVM_STREAMBITS $end
$var parameter 32 8 UVM_RADIX $end
$var parameter 32 9 UVM_MACRO_NUMFLAGS $end
$var parameter 32 : UVM_DEFAULT $end
$var parameter 32 ; UVM_ALL_ON $end
$var parameter 32 < UVM_FLAGS_ON $end
$var parameter 32 = UVM_FLAGS_OFF $end
$var parameter 32 > UVM_COPY $end
$var parameter 32 ? UVM_NOCOPY $end
$var parameter 32 @ UVM_COMPARE $end
$var parameter 32 A UVM_NOCOMPARE $end
$var parameter 32 B UVM_PRINT $end
$var parameter 32 C UVM_NOPRINT $end
$var parameter 32 D UVM_RECORD $end
$var parameter 32 E UVM_NORECORD $end
$var parameter 32 F UVM_PACK $end
$var parameter 32 G UVM_NOPACK $end
$var parameter 32 H UVM_PHYSICAL $end
$var parameter 32 I UVM_ABSTRACT $end
$var parameter 32 J UVM_READONLY $end
$var parameter 32 K UVM_NODEFPRINT $end
$var parameter 32 L UVM_MACRO_EXTRAS $end
$var parameter 32 M UVM_FLAGS $end
$var parameter 32 N UVM_UNPACK $end
$var parameter 32 O UVM_CHECK_FIELDS $end
$var parameter 32 P UVM_END_DATA_EXTRA $end
$var parameter 32 Q UVM_START_FUNCS $end
$var parameter 32 R UVM_SET $end
$var parameter 32 S UVM_SETINT $end
$var parameter 32 T UVM_SETOBJ $end
$var parameter 32 U UVM_SETSTR $end
$var parameter 32 V UVM_END_FUNCS $end
$var parameter 32 W UVM_STR_CRC_POLYNOMIAL $end
$var parameter 32 X UVM_STDOUT $end
$var parameter 32 Y UVM_LINE_WIDTH $end
$var parameter 32 Z UVM_NUM_LINES $end
$var parameter 32 [ UVM_SMALL_STRING $end
$var parameter 32 \ UVM_LARGE_STRING $end
$var reg 1 ] uvm_start_uvm_declarations $end
$var integer 32 ^ uvm_global_random_seed $end
$var integer 32 _ UVM_UNBOUNDED_CONNECTIONS $end

$scope function uvm_hdl_check_path $end
$var integer 32 ` uvm_hdl_check_path $end
$upscope $end

$scope function uvm_hdl_deposit $end
$var integer 32 a uvm_hdl_deposit $end
$var reg 1024 b value [1023:0] $end
$upscope $end

$scope function uvm_hdl_force $end
$var integer 32 c uvm_hdl_force $end
$var reg 1024 d value [1023:0] $end
$upscope $end

$scope task uvm_hdl_force_time $end
$var reg 1024 e value [1023:0] $end
$var time 64 f force_time $end
$upscope $end

$scope function uvm_hdl_release_and_read $end
$var integer 32 g uvm_hdl_release_and_read $end
$var reg 1024 h value [1023:0] $end
$upscope $end

$scope function uvm_hdl_release $end
$var integer 32 i uvm_hdl_release $end
$upscope $end

$scope function uvm_hdl_read $end
$var integer 32 j uvm_hdl_read $end
$var reg 1024 k value [1023:0] $end
$upscope $end

$scope function uvm_dpi_get_next_arg_c $end
$upscope $end

$scope function uvm_dpi_get_tool_name_c $end
$upscope $end

$scope function uvm_dpi_get_tool_version_c $end
$upscope $end

$scope function uvm_dpi_get_next_arg $end
$upscope $end

$scope function uvm_dpi_get_tool_name $end
$upscope $end

$scope function uvm_dpi_get_tool_version $end
$upscope $end

$scope function uvm_dpi_regcomp $end
$upscope $end

$scope function uvm_dpi_regexec $end
$var integer 32 l uvm_dpi_regexec $end
$upscope $end

$scope function uvm_dpi_regfree $end
$upscope $end

$scope function uvm_re_match $end
$var integer 32 m uvm_re_match $end
$upscope $end

$scope function uvm_dump_re_cache $end
$upscope $end

$scope function uvm_glob_to_re $end
$upscope $end

$scope function uvm_revision_string $end
$upscope $end

$scope function uvm_radix_to_string $end
$var integer 32 n radix $end
$upscope $end

$scope function uvm_instance_scope $end
$var reg 8 o c [7:0] $end
$var integer 32 p pos $end
$upscope $end

$scope function uvm_oneway_hash $end
$var integer 32 q uvm_oneway_hash $end
$var integer 32 r seed $end
$var reg 1 s msb $end
$var reg 8 t current_byte [7:0] $end
$var reg 32 u crc1 [31:0] $end
$upscope $end

$scope function uvm_create_random_seed $end
$var integer 32 v uvm_create_random_seed $end
$upscope $end

$scope function uvm_object_value_str $end
$upscope $end

$scope function uvm_leaf_scope $end
$var reg 8 w scope_separator [7:0] $end
$var reg 8 x bracket_match [7:0] $end
$var integer 32 y pos $end
$var integer 32 z bmatches $end
$upscope $end

$scope function uvm_vector_to_string $end
$var reg 4096 { value [4095:0] $end
$var integer 32 | size $end
$var integer 32 } radix $end
$upscope $end

$scope function uvm_get_array_index_int $end
$var integer 32 ~ uvm_get_array_index_int $end
$var reg 1 !! is_wildcard $end
$var integer 32 "! i $end
$upscope $end

$scope function uvm_get_array_index_string $end
$var reg 1 #! is_wildcard $end
$var integer 32 $! i $end
$upscope $end

$scope function uvm_is_array $end
$var reg 1 %! uvm_is_array $end
$upscope $end

$scope function uvm_has_wildcard $end
$upscope $end

$scope task run_test $end
$upscope $end

$scope function global_stop_request $end
$upscope $end

$scope function set_global_timeout $end
$var time 64 &! timeout $end
$var reg 1 '! overridable $end
$upscope $end

$scope function set_global_stop_timeout $end
$var time 64 (! timeout $end
$upscope $end

$scope function uvm_report_enabled $end
$var reg 1 )! uvm_report_enabled $end
$var integer 32 *! verbosity $end
$var reg 2 +! severity [1:0] $end
$upscope $end

$scope function uvm_report $end
$var reg 2 ,! severity [1:0] $end
$var integer 32 -! verbosity $end
$var integer 32 .! line $end
$upscope $end

$scope function uvm_report_info $end
$var integer 32 /! verbosity $end
$var integer 32 0! line $end
$upscope $end

$scope function uvm_report_warning $end
$var integer 32 1! verbosity $end
$var integer 32 2! line $end
$upscope $end

$scope function uvm_report_error $end
$var integer 32 3! verbosity $end
$var integer 32 4! line $end
$upscope $end

$scope function uvm_report_fatal $end
$var integer 32 5! verbosity $end
$var integer 32 6! line $end
$upscope $end

$scope function uvm_string_to_severity $end
$var reg 1 7! uvm_string_to_severity $end
$var reg 2 8! sev [1:0] $end
$upscope $end

$scope function uvm_string_to_action $end
$upscope $end

$scope function set_config_int $end
$var reg 4096 9! value [4095:0] $end
$upscope $end

$scope function set_config_object $end
$var reg 1 :! clone $end
$upscope $end

$scope function set_config_string $end
$upscope $end

$scope function uvm_is_match $end
$var reg 1 ;! uvm_is_match $end
$upscope $end

$scope function uvm_string_to_bits $end
$var reg 115200 <! uvm_string_to_bits [115199:0] $end
$upscope $end

$scope function uvm_bits_to_string $end
$var reg 115200 =! str [115199:0] $end
$upscope $end

$scope task uvm_wait_for_nba_region $end
$var integer 32 >! nba $end
$var integer 32 ?! next_nba $end
$upscope $end

$scope function uvm_split_string $end
$upscope $end

$scope function uvm_hdl_concat2string $end
$upscope $end
$upscope $end

$scope begin my_package $end
$upscope $end

$scope begin testbench_sv_unit $end
$upscope $end

$scope begin std $end
$upscope $end

$scope begin questa_uvm_pkg $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0#!
0%!
07!
b0 8!
bx <!
bx =!
bx b
bx d
bx e
bx h
bx k
1]
1s
b1110001 t
b100111010010110001101011111101 u
b1 {
0!!
0'!
0)!
b0 +!
b0 ,!
bx 9!
0:!
0;!
0!
1"
bx 5
b10000000000 6
b1000000000000 7
b1111000000000000000000000000 8
b10001 9
b10101010101 :
b101010101 ;
b101010101 <
b0 =
b1 >
b10 ?
b100 @
b1000 A
b10000 B
b100000 C
b1000000 D
b10000000 E
b100000000 F
b1000000000 G
b10000000000000 H
b100000000000000 I
b1000000000000000 J
b10000000000000000 K
b100000000000000000 L
b100000000000000001 M
b100000000000000010 N
b100000000000000011 O
b100000000000000100 P
b100000000000000101 Q
b100000000000000110 R
b100000000000000110 S
b100000000000000111 T
b100000000000001000 U
b100000000000001000 V
b100110000010001110110110110 W
b1 X
b1111000 Y
b1111000 Z
b1110111111 [
b11100000111111111 \
b100 #
b1000 $
b0 n
b101110 w
b0 x
b11000 y
b11111111111111111111111111111111 z
b0 $!
b0 `
b0 a
b0 c
b0 g
b0 i
b0 j
b1 l
b0 m
b1101001011000001111100000011110 ^
b101110 o
b111 p
b1101100010001101010110011110110 q
b1101001011000001111100000011110 r
b1011100000010101100110111111010 v
b100000 |
b10000000000000000000000000 }
b0 ~
b0 "!
b111110100 *!
b0 -!
b0 .!
b11001000 /!
b11011000 0!
b0 1!
b0 2!
b0 3!
b0 4!
b0 5!
b0 6!
b100100 >!
b100100 ?!
b11111111111111111111111111111111 _
bx f
bx &!
bx (!
0%
1&
x*
x)
x(
x'
x+
x,
x4
x3
x2
x1
x0
x/
x.
x-
$end
#5
1!
0"
1%
0&
#6
1+
0,
04
13
12
01
00
0/
1.
0-
0*
0)
0(
0'
#10
0!
0%
#15
1!
1%
b100101 ?!
b1101100010001101010110011111001 v
b1101100010001101010110011111100 v
b100101 >!
#16
0+
#20
0!
0%
#25
1!
1%
#26
1,
#30
0!
0%
#35
1!
1%
b1000110 5
#36
0,
#40
0!
0%
#45
1!
1%
b100110 ?!
b1101100010001101010110100000000 v
b1101100010001101010110100000101 v
b100110 >!
#50
0!
0%
#55
1!
1%
#56
1+
03
02
1/
1-
1*
#60
0!
0%
#65
1!
1%
b100111 ?!
b1101100010001101010110100001011 v
b1101100010001101010110100010010 v
b100111 >!
#66
0+
#70
0!
0%
#75
1!
1%
#76
1,
#80
0!
0%
#85
1!
1%
b11100000 5
#86
0,
#90
0!
0%
#95
1!
1%
b101000 ?!
b1101100010001101010110100011010 v
b1101100010001101010110100100011 v
b101000 >!
#100
0!
0%
#105
1!
1%
#106
1+
14
13
12
0/
0.
0-
0*
1)
#110
0!
0%
#115
1!
1%
b101001 ?!
b1101100010001101010110100101101 v
b1101100010001101010110100111000 v
b101001 >!
#116
0+
#120
0!
0%
#125
1!
1%
#126
1,
#130
0!
0%
#135
1!
1%
b111 5
#136
0,
#140
0!
0%
#145
1!
1%
b101010 ?!
b1101100010001101010110101000100 v
b1101100010001101010110101010001 v
b101010 >!
#150
0!
0%
#155
1!
1%
#156
1+
10
1*
#160
0!
0%
#165
1!
1%
b101011 ?!
b1101100010001101010110101011111 v
b1101100010001101010110101101110 v
b101011 >!
#166
0+
#170
0!
0%
#175
1!
1%
#176
1,
#180
0!
0%
#185
1!
1%
b10111 5
#186
0,
#190
0!
0%
#195
1!
1%
b101100 ?!
b1101100010001101010110101111110 v
b1101100010001101010110110001111 v
b101100 >!
#200
0!
0%
#205
1!
1%
#206
1+
04
03
11
0*
0)
1(
#210
0!
0%
#215
1!
1%
b101101 ?!
b1101100010001101010110110100001 v
b1101100010001101010110110110100 v
b101101 >!
#216
0+
#220
0!
0%
#225
1!
1%
#226
1,
#230
0!
0%
#235
1!
1%
b11100 5
#236
0,
#240
0!
0%
#245
1!
1%
b101110 ?!
b1101100010001101010110111001000 v
b1101100010001101010110111011101 v
b101110 >!
#250
0!
0%
#255
1!
1%
#256
1+
14
02
1/
1*
#260
0!
0%
#265
1!
1%
b101111 ?!
b1101100010001101010110111110011 v
b1101100010001101010111000001010 v
b101111 >!
#266
0+
#270
0!
0%
#275
1!
1%
#276
1,
#280
0!
0%
#285
1!
1%
b111001 5
#286
0,
#290
0!
0%
#295
1!
1%
b110000 ?!
b1101100010001101010111000100010 v
b1101100010001101010111000111011 v
b110000 >!
#300
0!
0%
#305
1!
1%
#306
1+
12
0/
1.
0*
1)
#310
0!
0%
#315
1!
1%
b110001 ?!
b1101100010001101010111001010101 v
b1101100010001101010111001110000 v
b110001 >!
#316
0+
#320
0!
0%
#325
1!
1%
#326
1,
#330
0!
0%
#335
1!
1%
b1011101 5
#336
0,
#340
0!
0%
#345
1!
1%
b110010 ?!
b1101100010001101010111010001100 v
b1101100010001101010111010101001 v
b110010 >!
#350
0!
0%
#355
1!
1%
#356
1+
04
00
0.
1*
#360
0!
0%
#365
1!
1%
b110011 ?!
b1101100010001101010111011000111 v
b1101100010001101010111011100110 v
b110011 >!
#366
0+
#370
0!
0%
#375
1!
1%
#376
1,
#380
0!
0%
#385
1!
1%
b1100 5
#386
0,
#390
0!
0%
#395
1!
1%
b110100 ?!
b1101100010001101010111100000110 v
b1101100010001101010111100100111 v
b110100 >!
#400
0!
0%
#405
1!
1%
#406
1+
14
13
02
1/
1.
1-
0*
0)
0(
1'
#410
0!
0%
#415
1!
1%
b110101 ?!
b1101100010001101010111101001001 v
b1101100010001101010111101101100 v
b110101 >!
#416
0+
#420
0!
0%
#425
1!
1%
#426
1,
#430
0!
0%
#435
1!
1%
b11101011 5
#436
0,
#440
0!
0%
#445
1!
1%
b110110 ?!
b1101100010001101010111110010000 v
b1101100010001101010111110110101 v
b110110 >!
#450
0!
0%
#455
1!
1%
#456
1+
04
03
12
10
0/
0.
0-
1*
#460
0!
0%
#465
1!
1%
b110111 ?!
b1101100010001101010111111011011 v
b1101100010001101011000000000010 v
b110111 >!
#466
0+
#470
0!
0%
#475
1!
1%
#476
1,
#480
0!
0%
#485
1!
1%
b11100 5
#486
0,
#490
0!
0%
#495
1!
1%
b111000 ?!
b1101100010001101011000000101010 v
b1101100010001101011000001010011 v
b111000 >!
#500
0!
0%
#505
1!
1%
#506
1+
14
13
01
00
1/
1-
0*
1)
#510
0!
0%
#515
1!
1%
b111001 ?!
b1101100010001101011000001111101 v
b1101100010001101011000010101000 v
b111001 >!
#516
0+
#520
0!
0%
#525
1!
1%
#526
1,
#530
0!
0%
#535
1!
1%
b10100111 5
#536
0,
#540
0!
0%
#545
1!
1%
b111010 ?!
b1101100010001101011000011010100 v
b1101100010001101011000100000001 v
b111010 >!
#550
0!
0%
#555
1!
1%
#556
1+
03
02
10
1.
1*
#560
0!
0%
#565
1!
1%
b111011 ?!
b1101100010001101011000100101111 v
b1101100010001101011000101011110 v
b111011 >!
#566
0+
#570
0!
0%
#575
1!
1%
#576
1,
#580
0!
0%
#585
1!
1%
b11110001 5
#586
0,
#590
0!
0%
#595
1!
1%
b111100 ?!
b1101100010001101011000110001110 v
b1101100010001101011000110111111 v
b111100 >!
#600
0!
0%
#605
1!
1%
#606
1+
11
0/
0.
0*
0)
1(
#610
0!
0%
#615
1!
1%
b111101 ?!
b1101100010001101011000111110001 v
b1101100010001101011001000100100 v
b111101 >!
#616
0+
#620
0!
0%
#625
1!
1%
#626
1,
#630
0!
0%
#635
1!
1%
b10011001 5
#636
0,
#640
0!
0%
#645
1!
1%
b111110 ?!
b1101100010001101011001001011000 v
b1101100010001101011001010001101 v
b111110 >!
#650
0!
0%
#655
1!
1%
#656
1+
04
00
0-
1*
#660
0!
0%
#665
1!
1%
b111111 ?!
b1101100010001101011001011000011 v
b1101100010001101011001011111010 v
b111111 >!
#666
0+
#670
0!
0%
#675
1!
1%
#676
1,
#680
0!
0%
#685
1!
1%
b1000 5
#686
0,
#690
0!
0%
#695
1!
1%
b1000000 ?!
b1101100010001101011001100110010 v
b1101100010001101011001101101011 v
b1000000 >!
#700
0!
0%
#705
1!
1%
#706
1+
13
12
01
10
1.
0*
1)
#710
0!
0%
#715
1!
1%
b1000001 ?!
b1101100010001101011001110100101 v
b1101100010001101011001111100000 v
b1000001 >!
#716
0+
#720
0!
0%
#725
1!
1%
#726
1,
#730
0!
0%
#735
1!
1%
b1010110 5
#736
0,
#740
0!
0%
#745
1!
1%
b1000010 ?!
b1101100010001101011010000011100 v
b1101100010001101011010001011001 v
b1000010 >!
#750
0!
0%
#755
1!
1%
#756
1+
14
03
0.
1-
1*
#760
0!
0%
#765
1!
1%
b1000011 ?!
b1101100010001101011010010010111 v
b1101100010001101011010011010110 v
b1000011 >!
#766
0+
#770
0!
0%
#775
1!
1%
#776
1,
#780
0!
0%
#785
1!
1%
b10010101 5
#786
0,
#790
0!
0%
#795
1!
1%
b1000100 ?!
b1000100 >!
#800
0!
0%
#805
1!
1%
#810
0!
0%
#815
1!
1%
#820
0!
0%
#825
1!
1%
#830
0!
0%
#835
1!
1%
#840
0!
0%
#845
1!
1%
b1000101 ?!
b1000110 ?!
b1000101 >!
b1000110 >!
b1000111 ?!
b1001000 ?!
b1000111 >!
b1001000 >!
b1011100000010101100111000001100 v
b101101000110011101101011101110 v
b111111111110000010111101110000 v
b10110001111010010100110110101001 v
b10111100110110010001100100001100 v
b11011100011000010100111100010001 v
b10111000110011010111110101110110 v
b11110011110010100011010000101001 v
b10011011000000010001100111110001 v
b1111011110100110011000101001100 v
b10111010111011101101100000110101 v
b10010000111001100011011101011 v
b101101111010000111111111010010 v
b1001001101111111000001101100100 v
b1110100001110010001010001111001 v
b10000110011011101001001110100011 v
b11011101011101011011011011111110 v
b10110110010101110100110111001100 v
b111000001010100011101100111011 v
b11000101001010110000000011101111 v
b1100111011010110011111001100000 v
b100000100100000010000000111101 v
b110101011101011010010000111 v
b1001100000111100011010010111101 v
b10100010000010011100111101111010 v
b111000011000110011100110101111 v
b11011100000111001000010000111110 v
b1011100000010101100111000011111 v
b101101000110011101101100000001 v
b111111111110000010111110000011 v
b10110001111010010100110110111100 v
b10111100110110010001100100011111 v
b11011100011000010100111100100100 v
b10111000110011010111110110001001 v
b11110011110010100011010000111100 v
b10011011000000010001101000000100 v
b1111011110100110011000101011111 v
b10111010111011101101100001001000 v
b10010000111001100011011111110 v
b101101111010000111111111100101 v
b1001001101111111000001101110111 v
b1110100001110010001010010001100 v
b10000110011011101001001110110110 v
b11011101011101011011011100010001 v
b10110110010101110100110111011111 v
b11100000101